{"ast":null,"code":"import { START_SONG, FINISH_SONG, GUESS_COLOR, NEXT_LEVEL, START_GAME } from '../actions/game';\nexport const initialState = {\n  singing: true,\n  gameOver: false,\n  score: 0,\n  highscore: 0\n};\nexport default function game(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case START_GAME:\n      return { ...state,\n        gameOver: false,\n        score: 0\n      };\n\n    case START_SONG:\n      return { ...state,\n        singing: true\n      };\n\n    case FINISH_SONG:\n      return { ...state,\n        singing: false\n      };\n\n    case NEXT_LEVEL:\n      return { ...state,\n        score: state.score + 1\n      };\n\n    case GUESS_COLOR:\n      return { ...state,\n        gameOver: !payload.succeeded,\n        highscore: (!payload.succeeded && state.score) > state.highscore ? state.score : state.highscore\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mithilproof/Oleic/github/simon-says/src/reducers/game.js"],"names":["START_SONG","FINISH_SONG","GUESS_COLOR","NEXT_LEVEL","START_GAME","initialState","singing","gameOver","score","highscore","game","state","action","type","payload","succeeded"],"mappings":"AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,UALF,QAMO,iBANP;AAQA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,IADiB;AAE1BC,EAAAA,QAAQ,EAAE,KAFgB;AAG1BC,EAAAA,KAAK,EAAE,CAHmB;AAI1BC,EAAAA,SAAS,EAAE;AAJe,CAArB;AAOP,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGN,YAAtB,EAAoCO,MAApC,EAA4C;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAOC,IAAP;AACE,SAAKT,UAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF,SAAKR,UAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKH,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAFhB,OAAP;;AAKF,SAAKN,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,QAAQ,EAAE,CAACO,OAAO,CAACC,SAFd;AAGLN,QAAAA,SAAS,EAAE,CAAC,CAACK,OAAO,CAACC,SAAT,IAAsBJ,KAAK,CAACH,KAA7B,IAAsCG,KAAK,CAACF,SAA5C,GAAwDE,KAAK,CAACH,KAA9D,GAAsEG,KAAK,CAACF;AAHlF,OAAP;;AAMF;AACE,aAAOE,KAAP;AAlCJ;AAoCD","sourcesContent":["import {\n  START_SONG,\n  FINISH_SONG,\n  GUESS_COLOR,\n  NEXT_LEVEL,\n  START_GAME,\n} from '../actions/game';\n\nexport const initialState = {\n  singing: true,\n  gameOver: false,\n  score: 0,\n  highscore: 0,\n}\n\nexport default function game(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case START_GAME:\n      return {\n        ...state,\n        gameOver: false,\n        score: 0,\n      }\n\n    case START_SONG:\n      return {\n        ...state,\n        singing: true,\n      }\n\n    case FINISH_SONG:\n      return {\n        ...state,\n        singing: false,\n      }\n\n    case NEXT_LEVEL:\n      return {\n        ...state,\n        score: state.score + 1,\n      }\n\n    case GUESS_COLOR:\n      return {\n        ...state,\n        gameOver: !payload.succeeded,\n        highscore: (!payload.succeeded && state.score) > state.highscore ? state.score : state.highscore,\n      }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}