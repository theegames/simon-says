{"ast":null,"code":"import { LIGHTEN_PAD, LIGHTEN_OFF_PAD } from '../actions/game';\nexport const initialState = [{\n  id: 'green',\n  component: 'GreenPad',\n  active: false\n}, {\n  id: 'red',\n  component: 'RedPad',\n  active: false\n}, {\n  id: 'yellow',\n  component: 'YellowPad',\n  active: false\n}, {\n  id: 'blue',\n  component: 'BluePad',\n  active: false\n}];\nexport default function pads(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LIGHTEN_PAD:\n      return state.map(b => ({ ...b,\n        active: payload.id === b.id\n      }));\n\n    case LIGHTEN_OFF_PAD:\n      return state.map(b => ({ ...b,\n        active: false\n      }));\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mithilproof/Oleic/github/simon-says/src/reducers/pads.js"],"names":["LIGHTEN_PAD","LIGHTEN_OFF_PAD","initialState","id","component","active","pads","state","action","type","payload","map","b"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,iBAA7C;AAEA,OAAO,MAAMC,YAAY,GAAG,CAC1B;AACEC,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAD0B,EAM1B;AACEF,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,SAAS,EAAE,QAFb;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAN0B,EAW1B;AACEF,EAAAA,EAAE,EAAE,QADN;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAX0B,EAgB1B;AACEF,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAhB0B,CAArB;AAuBP,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGL,YAAtB,EAAoCM,MAApC,EAA4C;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAOC,IAAP;AACE,SAAKT,WAAL;AACE,aAAOO,KAAK,CAACI,GAAN,CAAUC,CAAC,KAAK,EACrB,GAAGA,CADkB;AAErBP,QAAAA,MAAM,EAAEK,OAAO,CAACP,EAAR,KAAeS,CAAC,CAACT;AAFJ,OAAL,CAAX,CAAP;;AAKF,SAAKF,eAAL;AACE,aAAOM,KAAK,CAACI,GAAN,CAAUC,CAAC,KAAK,EACrB,GAAGA,CADkB;AAErBP,QAAAA,MAAM,EAAE;AAFa,OAAL,CAAX,CAAP;;AAKF;AACE,aAAOE,KAAP;AAdJ;AAgBD","sourcesContent":["import { LIGHTEN_PAD, LIGHTEN_OFF_PAD } from '../actions/game';\n\nexport const initialState = [\n  {\n    id: 'green',\n    component: 'GreenPad',\n    active: false,\n  },\n  {\n    id: 'red',\n    component: 'RedPad',\n    active: false,\n  },\n  {\n    id: 'yellow',\n    component: 'YellowPad',\n    active: false,\n  },\n  {\n    id: 'blue',\n    component: 'BluePad',\n    active: false,\n  },\n];\n\nexport default function pads(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case LIGHTEN_PAD:\n      return state.map(b => ({\n        ...b,\n        active: payload.id === b.id,\n      }));\n\n    case LIGHTEN_OFF_PAD:\n      return state.map(b => ({\n        ...b,\n        active: false,\n      }));\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}