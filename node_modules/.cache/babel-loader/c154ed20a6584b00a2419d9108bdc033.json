{"ast":null,"code":"var _jsxFileName = \"/Users/mithilproof/Oleic/github/simon-says/src/screens/Board.js\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { connect, shallowEqual, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Flex } from \"reflexbox/styled-components\";\nimport { actionCreators } from \"../actions/game\";\nimport { Button } from \"../components/Buttons\";\nimport CenterOverlay from \"../components/CenterOverlay\";\nimport Game from \"../components/Game\";\nimport GrayScale from \"../components/GrayScale\";\nimport Pads from \"../components/Pads\";\nimport Score from \"../components/Score\";\nimport { NEXT_LEVEL_DELAY_TIME, SONG_DELAY_TIME } from \"../constants\";\nimport sleep from \"../utils/sleep\";\nimport Player from \"./Player\";\nimport Shell from \"./Shell\";\nexport function Board(props) {\n  const {\n    actions\n  } = props;\n  const {\n    game: {\n      gameOver,\n      score,\n      singing,\n      highscore\n    },\n    match,\n    pads\n  } = useSelector(state => state, shallowEqual);\n  const startMatch = useCallback(() => {\n    actions.startGame();\n    sleep(SONG_DELAY_TIME).then(() => actions.sing());\n  }, [actions]);\n  useEffect(() => {\n    startMatch();\n  }, []);\n  const onPadClick = useCallback(({\n    id\n  }) => {\n    const tail = match.guessed.length;\n    const succeeded = match.all[tail] === id;\n\n    if (!gameOver) {\n      window.navigator.vibrate && window.navigator.vibrate(10);\n      actions.guess({\n        id,\n        succeeded\n      }).then(async ({\n        done\n      }) => {\n        if (done) {\n          actions.nextLevel();\n          await sleep(NEXT_LEVEL_DELAY_TIME);\n          actions.sing();\n        }\n      });\n    }\n  }, [actions, match]);\n  return /*#__PURE__*/React.createElement(Shell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, gameOver && /*#__PURE__*/React.createElement(CenterOverlay, {\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"SCORE \", score), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"HIGH SCORE \", highscore), /*#__PURE__*/React.createElement(Button, {\n    onClick: startMatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Try again\")), /*#__PURE__*/React.createElement(GrayScale, {\n    disabled: !gameOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Game, {\n    disbledPointer: singing || gameOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, pads.slice(0, 2).map((pad, i) => /*#__PURE__*/React.createElement(Pads, {\n    key: i,\n    pad: pad,\n    onClick: () => onPadClick({\n      id: pad.id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Score, {\n    length: score === null || score === void 0 ? void 0 : score.toString().length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, score), /*#__PURE__*/React.createElement(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, pads.slice(2, 4).map((pad, i) => /*#__PURE__*/React.createElement(Pads, {\n    key: i,\n    pad: pad,\n    onClick: () => onPadClick({\n      id: pad.id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Player, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\nexport default connect(null, dispatch => ({\n  actions: bindActionCreators(actionCreators, dispatch)\n}))(Board);","map":{"version":3,"sources":["/Users/mithilproof/Oleic/github/simon-says/src/screens/Board.js"],"names":["React","useCallback","useEffect","connect","shallowEqual","useSelector","bindActionCreators","Flex","actionCreators","Button","CenterOverlay","Game","GrayScale","Pads","Score","NEXT_LEVEL_DELAY_TIME","SONG_DELAY_TIME","sleep","Player","Shell","Board","props","actions","game","gameOver","score","singing","highscore","match","pads","state","startMatch","startGame","then","sing","onPadClick","id","tail","guessed","length","succeeded","all","window","navigator","vibrate","guess","done","nextLevel","slice","map","pad","i","toString","dispatch"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { connect, shallowEqual, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Flex } from \"reflexbox/styled-components\";\nimport { actionCreators } from \"../actions/game\";\nimport { Button } from \"../components/Buttons\";\nimport CenterOverlay from \"../components/CenterOverlay\";\nimport Game from \"../components/Game\";\nimport GrayScale from \"../components/GrayScale\";\nimport Pads from \"../components/Pads\";\nimport Score from \"../components/Score\";\nimport { NEXT_LEVEL_DELAY_TIME, SONG_DELAY_TIME } from \"../constants\";\nimport sleep from \"../utils/sleep\";\nimport Player from \"./Player\";\nimport Shell from \"./Shell\";\n\nexport function Board(props) {\n  const { actions } = props;\n  const {\n    game: { gameOver, score, singing, highscore },\n    match,\n    pads,\n  } = useSelector((state) => state, shallowEqual);\n\n  const startMatch = useCallback(() => {\n    actions.startGame();\n    sleep(SONG_DELAY_TIME).then(() => actions.sing());\n  }, [actions]);\n\n  useEffect(() => {\n    startMatch();\n  }, []);\n\n  const onPadClick = useCallback(\n    ({ id }) => {\n      const tail = match.guessed.length;\n      const succeeded = match.all[tail] === id;\n      if (!gameOver) {\n        window.navigator.vibrate && window.navigator.vibrate(10);\n        actions.guess({ id, succeeded }).then(async ({ done }) => {\n          if (done) {\n            actions.nextLevel();\n            await sleep(NEXT_LEVEL_DELAY_TIME);\n            actions.sing();\n          }\n        });\n      }\n    },\n    [actions, match]\n  );\n\n  return (\n    <Shell>\n      {gameOver && (\n        <CenterOverlay p={2}>\n          <h2>SCORE {score}</h2>\n          <h3>HIGH SCORE {highscore}</h3>\n          <Button onClick={startMatch}>Try again</Button>\n        </CenterOverlay>\n      )}\n      <GrayScale disabled={!gameOver}>\n        <Game disbledPointer={singing || gameOver}>\n          <Flex align=\"center\" justify=\"center\">\n            {pads.slice(0, 2).map((pad, i) => (\n              <Pads\n                key={i}\n                pad={pad}\n                onClick={() => onPadClick({ id: pad.id })}\n              />\n            ))}\n          </Flex>\n          <Score length={score?.toString().length}>{score}</Score>\n          <Flex align=\"center\" justify=\"center\">\n            {pads.slice(2, 4).map((pad, i) => (\n              <Pads\n                key={i}\n                pad={pad}\n                onClick={() => onPadClick({ id: pad.id })}\n              />\n            ))}\n          </Flex>\n        </Game>\n      </GrayScale>\n      <Player />\n    </Shell>\n  );\n}\n\nexport default connect(null, (dispatch) => ({\n  actions: bindActionCreators(actionCreators, dispatch),\n}))(Board);\n"]},"metadata":{},"sourceType":"module"}