{"version":3,"sources":["audios/blue.mp3","audios/green.mp3","audios/red.mp3","audios/yellow.mp3","registerServiceWorker.js","utils/sleep.js","constants.js","utils/get-random-id.js","utils/create-action.js","actions/game.js","components/Buttons.js","components/CenterOverlay.js","components/Game.js","components/GrayScale.js","components/Pad.js","components/Pads.js","components/Score.js","audios/index.js","screens/Player.js","components/Header.js","screens/Shell.js","screens/Board.js","components/Title.js","screens/Welcome.js","reducers/pads.js","reducers/game.js","reducers/match.js","reducers/index.js","store.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","timeout","ms","Promise","resolve","setTimeout","e","clearTimeout","finally","colors","red","blue","green","yellow","white","dark","ids","getRandomId","Math","floor","random","length","createAction","type","payload","start","next","guessColor","startSong","finishSong","lightenPad","lightenOffPad","actionCreators","startGame","nextLevel","guess","succeeded","id","dispatch","getState","a","sleep","SONG_DELAY_TIME","all","guessed","done","r","sing","i","styles","Button","styled","button","ButtonLink","Link","CenterOverlay","Box","Game","div","props","disbledPointer","GrayScale","disabled","lighten","from","color","hex","activeCSS","Pad","active","PadsByComponentName","GreenPad","m","className","RedPad","YellowPad","BluePad","Pads","pad","onClick","component","Composed","Score","blueTone","greenTone","redTone","yellowTone","Player","this","player","refs","currentTime","play","Object","keys","audios","map","key","ref","preload","src","Component","connect","pads","game","find","Header","Shell","highscore","style","children","align","justify","width","height","p","flex","display","justifyContent","alignItems","flexDirection","actions","bindActionCreators","useSelector","shallowEqual","gameOver","score","singing","startMatch","useCallback","useEffect","onPadClick","tail","vibrate","slice","toString","Headline","h1","Title","value","list","size","letters","Array","reduce","acc","n","concat","x","colorify","Welcome","to","initialState","combineReducers","action","b","routing","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","rootReducer","ReactDOM","render","store","path","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ca515021.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue.d6f8a4c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/green.3c8ca947.mp3\";","module.exports = __webpack_public_path__ + \"static/media/red.8d481077.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yellow.3ee58245.mp3\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default function (ms = 0) {\n  let timeout;\n  return new Promise(\n    (resolve) =>\n      (timeout = setTimeout(() => {\n        resolve();\n      }, ms))\n  )\n    .catch((e) => {\n      clearTimeout(timeout);\n    })\n    .then(() => {\n      clearTimeout(timeout);\n    })\n    .finally(() => {\n      clearTimeout(timeout);\n    });\n}\n","export const colors = {\n  red: '#FF4136',\n  blue: '#0074D9',\n  green: '#2ECC40',\n  yellow: '#FFDC00',\n  white: 'white',\n  dark: '#1B1A1A',\n}\n\nexport const ids = [\n  'green',\n  'red',\n  'yellow',\n  'blue',\n];\n\nexport const SONG_DELAY_TIME = 200;\nexport const REDUCED_DELAY_TIME = SONG_DELAY_TIME - 100;\nexport const NEXT_LEVEL_DELAY_TIME = 500;\nexport const REPO_URL = 'https://primegame.co';\n","import { ids } from '../constants';\n\nconst getRandomId = () => ids[Math.floor(Math.random() * ids.length)];\n\nexport default getRandomId;\n","export default function createAction(type) {\n  return (payload = {}) => ({\n    type,\n    payload,\n  });\n}\n","import sleep from \"../utils/sleep\";\nimport getRandomId from \"../utils/get-random-id\";\nimport createAction from \"../utils/create-action\";\nimport { SONG_DELAY_TIME, REDUCED_DELAY_TIME } from \"../constants\";\n\nexport const START_GAME = \"START_GAME\";\nexport const START_SONG = \"START_SONG\";\nexport const FINISH_SONG = \"FINISH_SONG\";\nexport const LIGHTEN_PAD = \"LIGHTEN_PAD\";\nexport const LIGHTEN_OFF_PAD = \"LIGHTEN_OFF_PAD\";\nexport const GUESS_COLOR = \"GUESS_COLOR\";\nexport const NEXT_LEVEL = \"NEXT_LEVEL\";\n\nconst start = createAction(START_GAME);\nconst next = createAction(NEXT_LEVEL);\n\nconst startGame = (payload) => start({ next: getRandomId() });\nconst nextLevel = (payload) => next({ next: getRandomId() });\n\nconst guessColor = createAction(GUESS_COLOR);\nconst startSong = createAction(START_SONG);\nconst finishSong = createAction(FINISH_SONG);\nconst lightenPad = createAction(LIGHTEN_PAD);\nconst lightenOffPad = createAction(LIGHTEN_OFF_PAD);\n\nconst sing = (payload) => async (dispatch, getState) => {\n  try {\n    dispatch(startSong());\n    const { match } = getState();\n    for (let i = 0; i <= match.all.length - 1; i++) {\n      const id = match.all[i];\n      dispatch(lightenPad({ id }));\n      await sleep(SONG_DELAY_TIME);\n      dispatch(lightenOffPad());\n      await sleep(SONG_DELAY_TIME);\n    }\n\n    dispatch(finishSong());\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst guess = ({ succeeded, id }) => async (dispatch, getState) => {\n  try {\n    dispatch(guessColor({ succeeded, id }));\n    dispatch(startSong());\n    dispatch(lightenPad({ id }));\n    await sleep(REDUCED_DELAY_TIME);\n    dispatch(lightenOffPad());\n    await sleep(REDUCED_DELAY_TIME);\n    dispatch(finishSong());\n\n    const { match } = getState();\n    const { all, guessed } = match;\n    const done = all.length === guessed.length && succeeded;\n\n    return new Promise((r) => r({ done }));\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const actionCreators = {\n  startSong,\n  startGame,\n  finishSong,\n  lightenPad,\n  lightenOffPad,\n  nextLevel,\n  guessColor,\n  guess,\n  sing,\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = `\n  font-size: 2em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid white;\n  color: white;\n  background-color: transparent;\n  font-family: 'Bungee', sans-serif;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: 0.3s;\n  outline: none;\n  text-decoration: none;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Button = styled.button`\n  ${styles}\n`;\nexport const ButtonLink = styled(Link)`\n  ${styles}\n`;\n","import styled from \"styled-components\";\nimport { Box } from \"reflexbox\";\n\nconst CenterOverlay = styled(Box)`\n  position: absolute;\n  margin: auto;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 4;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0.9);\n  height: 250px;\n`;\n\nexport default CenterOverlay;\n","import styled from 'styled-components';\n\nconst Game = styled.div`\n  pointer-events: ${props => props.disbledPointer ? 'none' : 'initial'};\n  position: relative;\n`;\n\nexport default Game;\n\n","import styled from 'styled-components';\n\nconst GrayScale = styled.div`\n  transition: 0.7s;\n  filter: grayscale(100%);\n  ${props => !props.disabled ? '' : `\n    filter: none;\n  `}\n`;\n\nexport default GrayScale;\n\n","import styled from \"styled-components\";\nimport color from \"color\";\nimport createNeonAnimation from \"../utils/create-neon-animation\";\nimport { Box } from \"reflexbox\";\n\nconst transform = `\n  transform: scale(1.02);\n`;\n\nconst lighten = (from) => color(from).lighten(0.333).hex();\n\nconst activeCSS = (props) => `\n  background-color: ${lighten(props.color)} !important;\n  animation: foo;\n  ${transform}\n`;\n\nconst Pad = styled(Box)`\n  width: 200px;\n  height: 200px;\n  box-sizing: border-box;\n  background-color: ${({ color }) => color};\n  cursor: pointer;\n  animation: none;\n  transition: 0.2s;\n  -webkit-tap-highlight-color: transparent;\n  ${(props) => (props.active ? activeCSS(props) : \"\")}\n\n  @media (max-width: 600px) {\n    width: 170px;\n    height: 170px;\n  }\n\n  &:active {\n    background-color: ${({ color }) => lighten(color)} ${activeCSS};\n  }\n\n  &:hover {\n    ${transform}\n    box-shadow: 0 0 15px rgba(0, 0, 0, .8);\n  }\n\n  &.top-left {\n    border-radius: 320px 20px 20px 20px;\n  }\n\n  &.top-right {\n    border-radius: 20px 320px 20px 20px;\n  }\n\n  &.bottom-left {\n    border-radius: 20px 20px 20px 320px;\n  }\n\n  &.bottom-right {\n    border-radius: 20px 20px 320px 20px;\n  }\n`;\n\nexport default Pad;\n","import React from \"react\";\n\nimport Pad from \"./Pad\";\nimport { colors } from \"../constants\";\n\nexport const PadsByComponentName = {\n  GreenPad: ({ ...props }) => (\n    <Pad m={1} color={colors.green} className=\"top-left\" {...props} />\n  ),\n  RedPad: ({ ...props }) => (\n    <Pad m={1} color={colors.red} className=\"top-right\" {...props} />\n  ),\n  YellowPad: ({ ...props }) => (\n    <Pad m={1} color={colors.yellow} className=\"bottom-left\" {...props} />\n  ),\n  BluePad: ({ ...props }) => (\n    <Pad m={1} color={colors.blue} className=\"bottom-right\" {...props} />\n  ),\n};\n\nconst Pads = ({ pad, onClick }) => {\n  const { component } = pad;\n  const Composed = PadsByComponentName[component];\n  return <Composed {...pad} onClick={onClick} />;\n};\n\nexport default Pads;\n","import styled from 'styled-components';\nimport { colors } from '../constants';\n\nconst Score = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  margin: auto;\n  background-color: ${colors.dark};\n  font-size: ${props => props.length <= 2 ? '62px' : '45px'};\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  line-height: 120px;\n  text-align: center;\n  z-index: 2;\n  padding: 5px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, .8);\n  text-align: center;\n`;\n\nexport default Score;\n","import blueTone from './blue.mp3';\nimport greenTone from './green.mp3';\nimport redTone from './red.mp3';\nimport yellowTone from './yellow.mp3';\n\nexport default {\n  blue: blueTone,\n  green: greenTone,\n  red: redTone,\n  yellow: yellowTone,\n}\n","import React, { Component } from \"react\";\nimport audios from \"../audios\";\nimport { connect } from \"react-redux\";\n\nexport class Player extends Component {\n  componentDidUpdate() {\n    const { active } = this.props;\n    const player = this.refs[active];\n    if (!player) {\n      return;\n    }\n    player.currentTime = 0;\n    player.play();\n  }\n\n  render() {\n    return (\n      <div>\n        {Object.keys(audios).map((id, key) => (\n          <audio ref={id} preload=\"auto\" src={audios[id]} key={key}></audio>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(({ pads, game }) => {\n  const active = pads.find(({ active }) => active);\n  return {\n    active: active ? active.id : null,\n  };\n})(Player);\n","import styled from \"styled-components\";\nimport { Box } from \"reflexbox\";\n\nconst Header = styled(Box)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Flex, Box } from \"reflexbox\";\n\nimport { REPO_URL } from \"../constants\";\nimport Header from \"../components/Header\";\nimport { connect } from \"react-redux\";\n\nexport class Shell extends Component {\n  render() {\n    const { highscore, style, children } = this.props;\n    return (\n      <Flex\n        align=\"center\"\n        justify=\"center\"\n        style={{ width: \"100%\", height: \"100%\", ...style }}\n      >\n        <Header p={2} justify=\"space-between\" flex>\n          <Box>\n            HIGH SCORE: {highscore} <br />\n          </Box>\n        </Header>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          width=\"100%\"\n          height=\"100%\"\n        >\n          {children}\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default connect(({ game }) => game)(Shell);\n","import React, { useCallback, useEffect } from \"react\";\nimport { connect, shallowEqual, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Flex } from \"reflexbox/styled-components\";\nimport { actionCreators } from \"../actions/game\";\nimport { Button } from \"../components/Buttons\";\nimport CenterOverlay from \"../components/CenterOverlay\";\nimport Game from \"../components/Game\";\nimport GrayScale from \"../components/GrayScale\";\nimport Pads from \"../components/Pads\";\nimport Score from \"../components/Score\";\nimport { NEXT_LEVEL_DELAY_TIME, SONG_DELAY_TIME } from \"../constants\";\nimport sleep from \"../utils/sleep\";\nimport Player from \"./Player\";\nimport Shell from \"./Shell\";\n\nexport function Board(props) {\n  const { actions } = props;\n  const {\n    game: { gameOver, score, singing, highscore },\n    match,\n    pads,\n  } = useSelector((state) => state, shallowEqual);\n\n  const startMatch = useCallback(() => {\n    actions.startGame();\n    sleep(SONG_DELAY_TIME).then(() => actions.sing());\n  }, [actions]);\n\n  useEffect(() => {\n    startMatch();\n  }, []);\n\n  const onPadClick = useCallback(\n    ({ id }) => {\n      const tail = match.guessed.length;\n      const succeeded = match.all[tail] === id;\n      if (!gameOver) {\n        window.navigator.vibrate && window.navigator.vibrate(10);\n        actions.guess({ id, succeeded }).then(async ({ done }) => {\n          if (done) {\n            actions.nextLevel();\n            await sleep(NEXT_LEVEL_DELAY_TIME);\n            actions.sing();\n          }\n        });\n      }\n    },\n    [actions, match]\n  );\n\n  return (\n    <Shell>\n      {gameOver && (\n        <CenterOverlay p={2}>\n          <h2>SCORE {score}</h2>\n          <h3>HIGH SCORE {highscore}</h3>\n          <Button onClick={startMatch}>Try again</Button>\n        </CenterOverlay>\n      )}\n      <GrayScale disabled={!gameOver}>\n        <Game disbledPointer={singing || gameOver}>\n          <Flex align=\"center\" justify=\"center\">\n            {pads.slice(0, 2).map((pad, i) => (\n              <Pads\n                key={i}\n                pad={pad}\n                onClick={() => onPadClick({ id: pad.id })}\n              />\n            ))}\n          </Flex>\n          <Score length={score?.toString().length}>{score}</Score>\n          <Flex align=\"center\" justify=\"center\">\n            {pads.slice(2, 4).map((pad, i) => (\n              <Pads\n                key={i}\n                pad={pad}\n                onClick={() => onPadClick({ id: pad.id })}\n              />\n            ))}\n          </Flex>\n        </Game>\n      </GrayScale>\n      <Player />\n    </Shell>\n  );\n}\n\nexport default connect(null, (dispatch) => ({\n  actions: bindActionCreators(actionCreators, dispatch),\n}))(Board);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../constants\";\n\nconst Headline = styled.h1`\n  color: #fff;\n  font-size: 5em;\n  text-align: center;\n`;\n\nconst colorify = ({ colors, value }) => {\n  const list = Object.keys(colors);\n  const size = list.length - 1;\n  const letters = [...Array(Math.floor(value.length / size))]\n    .reduce((acc, n) => [...acc, ...list], [])\n    .concat(list.slice(0, list.length % size))\n    .map((x) => colors[x])\n    .map((color, i) => (\n      <span key={i} style={{ color }}>\n        {value[i]}\n      </span>\n    ));\n\n  return <span>{letters}</span>;\n};\n\nconst Title = ({ value }) => <Headline>{colorify({ colors, value })}</Headline>;\n\nexport default Title;\n","import React from \"react\";\nimport { Flex } from \"reflexbox\";\n\nimport Title from \"../components/Title\";\nimport Shell from \"./Shell\";\nimport { ButtonLink } from \"../components/Buttons\";\n\nconst Welcome = () => (\n  <Shell>\n    <Title value=\"REACT SIMON\" />\n    <Flex justify=\"center\">\n      <ButtonLink to=\"/board\">Play</ButtonLink>\n    </Flex>\n  </Shell>\n);\n\nexport default Welcome;\n","import { LIGHTEN_PAD, LIGHTEN_OFF_PAD } from '../actions/game';\n\nexport const initialState = [\n  {\n    id: 'green',\n    component: 'GreenPad',\n    active: false,\n  },\n  {\n    id: 'red',\n    component: 'RedPad',\n    active: false,\n  },\n  {\n    id: 'yellow',\n    component: 'YellowPad',\n    active: false,\n  },\n  {\n    id: 'blue',\n    component: 'BluePad',\n    active: false,\n  },\n];\n\nexport default function pads(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case LIGHTEN_PAD:\n      return state.map(b => ({\n        ...b,\n        active: payload.id === b.id,\n      }));\n\n    case LIGHTEN_OFF_PAD:\n      return state.map(b => ({\n        ...b,\n        active: false,\n      }));\n\n    default:\n      return state;\n  }\n}\n","import {\n  START_SONG,\n  FINISH_SONG,\n  GUESS_COLOR,\n  NEXT_LEVEL,\n  START_GAME,\n} from '../actions/game';\n\nexport const initialState = {\n  singing: true,\n  gameOver: false,\n  score: 0,\n  highscore: 0,\n}\n\nexport default function game(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case START_GAME:\n      return {\n        ...state,\n        gameOver: false,\n        score: 0,\n      }\n\n    case START_SONG:\n      return {\n        ...state,\n        singing: true,\n      }\n\n    case FINISH_SONG:\n      return {\n        ...state,\n        singing: false,\n      }\n\n    case NEXT_LEVEL:\n      return {\n        ...state,\n        score: state.score + 1,\n      }\n\n    case GUESS_COLOR:\n      return {\n        ...state,\n        gameOver: !payload.succeeded,\n        highscore: (!payload.succeeded && state.score) > state.highscore ? state.score : state.highscore,\n      }\n\n    default:\n      return state;\n  }\n}\n","import { START_GAME, GUESS_COLOR, NEXT_LEVEL } from '../actions/game';\n\nexport const initialState = {\n  guessed: [],\n  all: [],\n}\n\nexport default function blocks(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case START_GAME:\n      return {\n        guessed: [],\n        all: [\n          payload.next,\n        ],\n      }\n\n    case NEXT_LEVEL:\n      return {\n        guessed: [],\n        all: state.all.concat(payload.next),\n      }\n\n    case GUESS_COLOR:\n      return {\n       ...state,\n        guessed: payload.succeeded ? state.guessed.concat(payload.id) : state.guessed,\n      }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer as routing } from 'react-router-redux';\n\nimport pads from './pads';\nimport game from './game';\nimport match from './match';\n\nexport default combineReducers({\n  pads,\n  game,\n  match,\n  routing,\n});\n\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(\n  applyMiddleware(\n    thunk,\n  )\n);\n\nexport default createStore(rootReducer, {}, enhancer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport Board from \"./screens/Board\";\nimport Welcome from \"./screens/Welcome\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route path=\"/board\">\n          <Board />\n        </Route>\n        <Route path=\"/\">\n          <Welcome />\n        </Route>\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}